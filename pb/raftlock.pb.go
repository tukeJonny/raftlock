// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raftlock.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// acquire lock
type AcquireLockRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireLockRequest) Reset()         { *m = AcquireLockRequest{} }
func (m *AcquireLockRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireLockRequest) ProtoMessage()    {}
func (*AcquireLockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{0}
}

func (m *AcquireLockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireLockRequest.Unmarshal(m, b)
}
func (m *AcquireLockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireLockRequest.Marshal(b, m, deterministic)
}
func (m *AcquireLockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireLockRequest.Merge(m, src)
}
func (m *AcquireLockRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireLockRequest.Size(m)
}
func (m *AcquireLockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireLockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireLockRequest proto.InternalMessageInfo

func (m *AcquireLockRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AcquireLockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireLockResponse) Reset()         { *m = AcquireLockResponse{} }
func (m *AcquireLockResponse) String() string { return proto.CompactTextString(m) }
func (*AcquireLockResponse) ProtoMessage()    {}
func (*AcquireLockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{1}
}

func (m *AcquireLockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireLockResponse.Unmarshal(m, b)
}
func (m *AcquireLockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireLockResponse.Marshal(b, m, deterministic)
}
func (m *AcquireLockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireLockResponse.Merge(m, src)
}
func (m *AcquireLockResponse) XXX_Size() int {
	return xxx_messageInfo_AcquireLockResponse.Size(m)
}
func (m *AcquireLockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireLockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireLockResponse proto.InternalMessageInfo

// release lock
type ReleaseLockRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseLockRequest) Reset()         { *m = ReleaseLockRequest{} }
func (m *ReleaseLockRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseLockRequest) ProtoMessage()    {}
func (*ReleaseLockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{2}
}

func (m *ReleaseLockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseLockRequest.Unmarshal(m, b)
}
func (m *ReleaseLockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseLockRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseLockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseLockRequest.Merge(m, src)
}
func (m *ReleaseLockRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseLockRequest.Size(m)
}
func (m *ReleaseLockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseLockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseLockRequest proto.InternalMessageInfo

func (m *ReleaseLockRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReleaseLockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseLockResponse) Reset()         { *m = ReleaseLockResponse{} }
func (m *ReleaseLockResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseLockResponse) ProtoMessage()    {}
func (*ReleaseLockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{3}
}

func (m *ReleaseLockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseLockResponse.Unmarshal(m, b)
}
func (m *ReleaseLockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseLockResponse.Marshal(b, m, deterministic)
}
func (m *ReleaseLockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseLockResponse.Merge(m, src)
}
func (m *ReleaseLockResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseLockResponse.Size(m)
}
func (m *ReleaseLockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseLockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseLockResponse proto.InternalMessageInfo

// join cluster
type JoinClusterRequest struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	RemoteAddress        string   `protobuf:"bytes,2,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinClusterRequest) Reset()         { *m = JoinClusterRequest{} }
func (m *JoinClusterRequest) String() string { return proto.CompactTextString(m) }
func (*JoinClusterRequest) ProtoMessage()    {}
func (*JoinClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{4}
}

func (m *JoinClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinClusterRequest.Unmarshal(m, b)
}
func (m *JoinClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinClusterRequest.Marshal(b, m, deterministic)
}
func (m *JoinClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinClusterRequest.Merge(m, src)
}
func (m *JoinClusterRequest) XXX_Size() int {
	return xxx_messageInfo_JoinClusterRequest.Size(m)
}
func (m *JoinClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinClusterRequest proto.InternalMessageInfo

func (m *JoinClusterRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *JoinClusterRequest) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

type JoinClusterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinClusterResponse) Reset()         { *m = JoinClusterResponse{} }
func (m *JoinClusterResponse) String() string { return proto.CompactTextString(m) }
func (*JoinClusterResponse) ProtoMessage()    {}
func (*JoinClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{5}
}

func (m *JoinClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinClusterResponse.Unmarshal(m, b)
}
func (m *JoinClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinClusterResponse.Marshal(b, m, deterministic)
}
func (m *JoinClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinClusterResponse.Merge(m, src)
}
func (m *JoinClusterResponse) XXX_Size() int {
	return xxx_messageInfo_JoinClusterResponse.Size(m)
}
func (m *JoinClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinClusterResponse proto.InternalMessageInfo

// stats
type StatsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{6}
}

func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (m *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(m, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

type StatsResponse struct {
	Stats                map[string]string `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StatsResponse) Reset()         { *m = StatsResponse{} }
func (m *StatsResponse) String() string { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()    {}
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{7}
}

func (m *StatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsResponse.Unmarshal(m, b)
}
func (m *StatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsResponse.Marshal(b, m, deterministic)
}
func (m *StatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsResponse.Merge(m, src)
}
func (m *StatsResponse) XXX_Size() int {
	return xxx_messageInfo_StatsResponse.Size(m)
}
func (m *StatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatsResponse proto.InternalMessageInfo

func (m *StatsResponse) GetStats() map[string]string {
	if m != nil {
		return m.Stats
	}
	return nil
}

// nodes
type Node struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Suffrage             string   `protobuf:"bytes,3,opt,name=suffrage,proto3" json:"suffrage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{8}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Node) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Node) GetSuffrage() string {
	if m != nil {
		return m.Suffrage
	}
	return ""
}

type NodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesRequest) Reset()         { *m = NodesRequest{} }
func (m *NodesRequest) String() string { return proto.CompactTextString(m) }
func (*NodesRequest) ProtoMessage()    {}
func (*NodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{9}
}

func (m *NodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesRequest.Unmarshal(m, b)
}
func (m *NodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesRequest.Marshal(b, m, deterministic)
}
func (m *NodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesRequest.Merge(m, src)
}
func (m *NodesRequest) XXX_Size() int {
	return xxx_messageInfo_NodesRequest.Size(m)
}
func (m *NodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodesRequest proto.InternalMessageInfo

type NodesResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesResponse) Reset()         { *m = NodesResponse{} }
func (m *NodesResponse) String() string { return proto.CompactTextString(m) }
func (*NodesResponse) ProtoMessage()    {}
func (*NodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ee16364934cfc16, []int{10}
}

func (m *NodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesResponse.Unmarshal(m, b)
}
func (m *NodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesResponse.Marshal(b, m, deterministic)
}
func (m *NodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesResponse.Merge(m, src)
}
func (m *NodesResponse) XXX_Size() int {
	return xxx_messageInfo_NodesResponse.Size(m)
}
func (m *NodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodesResponse proto.InternalMessageInfo

func (m *NodesResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*AcquireLockRequest)(nil), "pb.AcquireLockRequest")
	proto.RegisterType((*AcquireLockResponse)(nil), "pb.AcquireLockResponse")
	proto.RegisterType((*ReleaseLockRequest)(nil), "pb.ReleaseLockRequest")
	proto.RegisterType((*ReleaseLockResponse)(nil), "pb.ReleaseLockResponse")
	proto.RegisterType((*JoinClusterRequest)(nil), "pb.JoinClusterRequest")
	proto.RegisterType((*JoinClusterResponse)(nil), "pb.JoinClusterResponse")
	proto.RegisterType((*StatsRequest)(nil), "pb.StatsRequest")
	proto.RegisterType((*StatsResponse)(nil), "pb.StatsResponse")
	proto.RegisterMapType((map[string]string)(nil), "pb.StatsResponse.StatsEntry")
	proto.RegisterType((*Node)(nil), "pb.Node")
	proto.RegisterType((*NodesRequest)(nil), "pb.NodesRequest")
	proto.RegisterType((*NodesResponse)(nil), "pb.NodesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftLockClient is the client API for RaftLock service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftLockClient interface {
	AcquireLock(ctx context.Context, in *AcquireLockRequest, opts ...grpc.CallOption) (*AcquireLockResponse, error)
	ReleaseLock(ctx context.Context, in *ReleaseLockRequest, opts ...grpc.CallOption) (*ReleaseLockResponse, error)
	JoinCluster(ctx context.Context, in *JoinClusterRequest, opts ...grpc.CallOption) (*JoinClusterResponse, error)
	Nodes(ctx context.Context, in *NodesRequest, opts ...grpc.CallOption) (*NodesResponse, error)
	Stats(ctx context.Context, in *StatsRequest, opts ...grpc.CallOption) (*StatsResponse, error)
}

type raftLockClient struct {
	cc *grpc.ClientConn
}

func NewRaftLockClient(cc *grpc.ClientConn) RaftLockClient {
	return &raftLockClient{cc}
}

func (c *raftLockClient) AcquireLock(ctx context.Context, in *AcquireLockRequest, opts ...grpc.CallOption) (*AcquireLockResponse, error) {
	out := new(AcquireLockResponse)
	err := c.cc.Invoke(ctx, "/pb.RaftLock/AcquireLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftLockClient) ReleaseLock(ctx context.Context, in *ReleaseLockRequest, opts ...grpc.CallOption) (*ReleaseLockResponse, error) {
	out := new(ReleaseLockResponse)
	err := c.cc.Invoke(ctx, "/pb.RaftLock/ReleaseLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftLockClient) JoinCluster(ctx context.Context, in *JoinClusterRequest, opts ...grpc.CallOption) (*JoinClusterResponse, error) {
	out := new(JoinClusterResponse)
	err := c.cc.Invoke(ctx, "/pb.RaftLock/JoinCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftLockClient) Nodes(ctx context.Context, in *NodesRequest, opts ...grpc.CallOption) (*NodesResponse, error) {
	out := new(NodesResponse)
	err := c.cc.Invoke(ctx, "/pb.RaftLock/Nodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftLockClient) Stats(ctx context.Context, in *StatsRequest, opts ...grpc.CallOption) (*StatsResponse, error) {
	out := new(StatsResponse)
	err := c.cc.Invoke(ctx, "/pb.RaftLock/Stats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftLockServer is the server API for RaftLock service.
type RaftLockServer interface {
	AcquireLock(context.Context, *AcquireLockRequest) (*AcquireLockResponse, error)
	ReleaseLock(context.Context, *ReleaseLockRequest) (*ReleaseLockResponse, error)
	JoinCluster(context.Context, *JoinClusterRequest) (*JoinClusterResponse, error)
	Nodes(context.Context, *NodesRequest) (*NodesResponse, error)
	Stats(context.Context, *StatsRequest) (*StatsResponse, error)
}

func RegisterRaftLockServer(s *grpc.Server, srv RaftLockServer) {
	s.RegisterService(&_RaftLock_serviceDesc, srv)
}

func _RaftLock_AcquireLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftLockServer).AcquireLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RaftLock/AcquireLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftLockServer).AcquireLock(ctx, req.(*AcquireLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftLock_ReleaseLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftLockServer).ReleaseLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RaftLock/ReleaseLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftLockServer).ReleaseLock(ctx, req.(*ReleaseLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftLock_JoinCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftLockServer).JoinCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RaftLock/JoinCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftLockServer).JoinCluster(ctx, req.(*JoinClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftLock_Nodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftLockServer).Nodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RaftLock/Nodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftLockServer).Nodes(ctx, req.(*NodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftLock_Stats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftLockServer).Stats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RaftLock/Stats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftLockServer).Stats(ctx, req.(*StatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftLock_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.RaftLock",
	HandlerType: (*RaftLockServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AcquireLock",
			Handler:    _RaftLock_AcquireLock_Handler,
		},
		{
			MethodName: "ReleaseLock",
			Handler:    _RaftLock_ReleaseLock_Handler,
		},
		{
			MethodName: "JoinCluster",
			Handler:    _RaftLock_JoinCluster_Handler,
		},
		{
			MethodName: "Nodes",
			Handler:    _RaftLock_Nodes_Handler,
		},
		{
			MethodName: "Stats",
			Handler:    _RaftLock_Stats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raftlock.proto",
}

func init() { proto.RegisterFile("raftlock.proto", fileDescriptor_6ee16364934cfc16) }

var fileDescriptor_6ee16364934cfc16 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x5d, 0x6b, 0xa3, 0x40,
	0x14, 0x8d, 0x26, 0x66, 0xb3, 0x37, 0x1b, 0xc9, 0xce, 0x7e, 0x44, 0x64, 0x59, 0x82, 0xec, 0x42,
	0x9e, 0x2c, 0xa4, 0x2f, 0xa1, 0x4f, 0x0d, 0xa5, 0x0f, 0x2d, 0xa5, 0x05, 0xdb, 0xf7, 0x60, 0xe2,
	0xb5, 0x48, 0xac, 0x63, 0x66, 0xc6, 0x42, 0x1e, 0xfa, 0x9f, 0xfa, 0x13, 0xcb, 0x38, 0x63, 0xaa,
	0x98, 0xd2, 0xb7, 0xb9, 0xc7, 0x73, 0xcf, 0xcc, 0xb9, 0xf7, 0x08, 0x36, 0x0b, 0x63, 0x91, 0xd2,
	0xcd, 0xd6, 0xcf, 0x19, 0x15, 0x94, 0x98, 0xf9, 0xda, 0xfb, 0x07, 0x64, 0xb9, 0xd9, 0x15, 0x09,
	0xc3, 0x1b, 0xba, 0xd9, 0x06, 0xb8, 0x2b, 0x90, 0x0b, 0x62, 0x83, 0x99, 0x44, 0x8e, 0x31, 0x35,
	0x66, 0x5f, 0x03, 0x33, 0x89, 0xbc, 0x5f, 0xf0, 0xa3, 0xc1, 0xe2, 0x39, 0xcd, 0x38, 0xca, 0xe6,
	0x00, 0x53, 0x0c, 0xf9, 0x67, 0xcd, 0x0d, 0x96, 0x6e, 0x7e, 0x00, 0x72, 0x4d, 0x93, 0xec, 0x22,
	0x2d, 0xb8, 0x40, 0x56, 0x35, 0x4f, 0xe0, 0x4b, 0x46, 0x23, 0x5c, 0x1d, 0x14, 0xfa, 0xb2, 0xbc,
	0x8a, 0xc8, 0x7f, 0xb0, 0x19, 0x3e, 0x51, 0x81, 0xab, 0x30, 0x8a, 0x18, 0x72, 0xee, 0x98, 0xe5,
	0xf7, 0x91, 0x42, 0x97, 0x0a, 0x94, 0x97, 0x35, 0x54, 0xf5, 0x65, 0x36, 0x7c, 0xbb, 0x17, 0xa1,
	0xe0, 0xfa, 0x1a, 0xef, 0x05, 0x46, 0xba, 0x56, 0x04, 0x32, 0x07, 0x8b, 0x4b, 0xc0, 0x31, 0xa6,
	0xdd, 0xd9, 0x70, 0xfe, 0xc7, 0xcf, 0xd7, 0x7e, 0x83, 0xa1, 0xaa, 0xcb, 0x4c, 0xb0, 0x7d, 0xa0,
	0xa8, 0xee, 0x02, 0xe0, 0x1d, 0x24, 0x63, 0xe8, 0x6e, 0x71, 0xaf, 0x5f, 0x2d, 0x8f, 0xe4, 0x27,
	0x58, 0xcf, 0x61, 0x5a, 0xa0, 0x7e, 0xa9, 0x2a, 0xce, 0xcc, 0x85, 0xe1, 0xdd, 0x41, 0xef, 0x96,
	0x46, 0xf8, 0xb1, 0x5b, 0x02, 0x3d, 0x69, 0x53, 0x77, 0x96, 0x67, 0xe2, 0xc2, 0x80, 0x17, 0x71,
	0xcc, 0xc2, 0x47, 0x74, 0xba, 0x25, 0x7e, 0xa8, 0xa5, 0x3f, 0x29, 0x78, 0xf0, 0x77, 0x02, 0x23,
	0x5d, 0x6b, 0x7f, 0x7f, 0xc1, 0x92, 0xd2, 0x95, 0xbf, 0x81, 0xf4, 0x27, 0x19, 0x81, 0x82, 0xe7,
	0xaf, 0x26, 0x0c, 0x82, 0x30, 0x16, 0x72, 0x45, 0xe4, 0x1c, 0x86, 0xb5, 0x75, 0x93, 0xdf, 0x92,
	0xdc, 0x4e, 0x89, 0x3b, 0x69, 0xe1, 0x7a, 0xda, 0x1d, 0xa9, 0x50, 0xdb, 0xb9, 0x52, 0x68, 0x47,
	0x45, 0x29, 0x1c, 0x0b, 0x47, 0xa9, 0x50, 0x5b, 0xa4, 0x52, 0x68, 0xe7, 0x45, 0x29, 0x1c, 0xdb,
	0x78, 0x87, 0xf8, 0x60, 0x95, 0x33, 0x20, 0xe3, 0xca, 0x6c, 0x35, 0x1e, 0xf7, 0x7b, 0x0d, 0xa9,
	0xf3, 0xcb, 0x75, 0x2a, 0x7e, 0x3d, 0x2e, 0x8a, 0xdf, 0x88, 0x83, 0xd7, 0x59, 0xf7, 0xcb, 0xbf,
	0xe8, 0xf4, 0x2d, 0x00, 0x00, 0xff, 0xff, 0x98, 0x5e, 0xfc, 0x9b, 0x57, 0x03, 0x00, 0x00,
}
